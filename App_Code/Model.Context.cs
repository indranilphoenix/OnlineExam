//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;

public partial class Indra_DBEntities1 : DbContext
{
    public Indra_DBEntities1()
        : base("name=Indra_DBEntities1")
    {
    }

    protected override void OnModelCreating(DbModelBuilder modelBuilder)
    {
        throw new UnintentionalCodeFirstException();
    }

    public DbSet<Admin_Login> Admin_Login { get; set; }
    public DbSet<Category_Info> Category_Info { get; set; }
    public DbSet<oe_exams> oe_exams { get; set; }
    public DbSet<oe_members> oe_members { get; set; }
    public DbSet<oe_questions> oe_questions { get; set; }
    public DbSet<oe_subjects> oe_subjects { get; set; }
    public DbSet<Ques_Info> Ques_Info { get; set; }
    public DbSet<Student_Details> Student_Details { get; set; }
    public DbSet<Student_LogIn> Student_LogIn { get; set; }
    public DbSet<Sub_Info> Sub_Info { get; set; }
    public DbSet<sysdiagrams> sysdiagrams { get; set; }
    public DbSet<User_Info> User_Info { get; set; }

    public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
    {
        var diagramnameParameter = diagramname != null ?
            new ObjectParameter("diagramname", diagramname) :
            new ObjectParameter("diagramname", typeof(string));

        var owner_idParameter = owner_id.HasValue ?
            new ObjectParameter("owner_id", owner_id) :
            new ObjectParameter("owner_id", typeof(int));

        var versionParameter = version.HasValue ?
            new ObjectParameter("version", version) :
            new ObjectParameter("version", typeof(int));

        var definitionParameter = definition != null ?
            new ObjectParameter("definition", definition) :
            new ObjectParameter("definition", typeof(byte[]));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
    }

    public virtual int sp_changePass(string email, string pass)
    {
        var emailParameter = email != null ?
            new ObjectParameter("email", email) :
            new ObjectParameter("email", typeof(string));

        var passParameter = pass != null ?
            new ObjectParameter("pass", pass) :
            new ObjectParameter("pass", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_changePass", emailParameter, passParameter);
    }

    public virtual int sp_checkEmail(string email, ObjectParameter question, ObjectParameter answer)
    {
        var emailParameter = email != null ?
            new ObjectParameter("email", email) :
            new ObjectParameter("email", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_checkEmail", emailParameter, question, answer);
    }

    public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
    {
        var diagramnameParameter = diagramname != null ?
            new ObjectParameter("diagramname", diagramname) :
            new ObjectParameter("diagramname", typeof(string));

        var owner_idParameter = owner_id.HasValue ?
            new ObjectParameter("owner_id", owner_id) :
            new ObjectParameter("owner_id", typeof(int));

        var versionParameter = version.HasValue ?
            new ObjectParameter("version", version) :
            new ObjectParameter("version", typeof(int));

        var definitionParameter = definition != null ?
            new ObjectParameter("definition", definition) :
            new ObjectParameter("definition", typeof(byte[]));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
    }

    public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
    {
        var diagramnameParameter = diagramname != null ?
            new ObjectParameter("diagramname", diagramname) :
            new ObjectParameter("diagramname", typeof(string));

        var owner_idParameter = owner_id.HasValue ?
            new ObjectParameter("owner_id", owner_id) :
            new ObjectParameter("owner_id", typeof(int));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
    }

    public virtual ObjectResult<sp_GetQuestion_Result> sp_GetQuestion(Nullable<int> sid)
    {
        var sidParameter = sid.HasValue ?
            new ObjectParameter("sid", sid) :
            new ObjectParameter("sid", typeof(int));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetQuestion_Result>("sp_GetQuestion", sidParameter);
    }

    public virtual ObjectResult<sp_GetSubject_Result> sp_GetSubject()
    {
        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetSubject_Result>("sp_GetSubject");
    }

    public virtual int sp_getUserDetails(string email, ObjectParameter first, ObjectParameter last, ObjectParameter mail, ObjectParameter address, ObjectParameter phone)
    {
        var emailParameter = email != null ?
            new ObjectParameter("email", email) :
            new ObjectParameter("email", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_getUserDetails", emailParameter, first, last, mail, address, phone);
    }

    public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
    {
        var diagramnameParameter = diagramname != null ?
            new ObjectParameter("diagramname", diagramname) :
            new ObjectParameter("diagramname", typeof(string));

        var owner_idParameter = owner_id.HasValue ?
            new ObjectParameter("owner_id", owner_id) :
            new ObjectParameter("owner_id", typeof(int));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
    }

    public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
    {
        var diagramnameParameter = diagramname != null ?
            new ObjectParameter("diagramname", diagramname) :
            new ObjectParameter("diagramname", typeof(string));

        var owner_idParameter = owner_id.HasValue ?
            new ObjectParameter("owner_id", owner_id) :
            new ObjectParameter("owner_id", typeof(int));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
    }

    public virtual int Sp_login(string firstName, string lastName, string address, string emailId, string phoneNumber, string password, string sequrityQuestion, string answer)
    {
        var firstNameParameter = firstName != null ?
            new ObjectParameter("firstName", firstName) :
            new ObjectParameter("firstName", typeof(string));

        var lastNameParameter = lastName != null ?
            new ObjectParameter("lastName", lastName) :
            new ObjectParameter("lastName", typeof(string));

        var addressParameter = address != null ?
            new ObjectParameter("Address", address) :
            new ObjectParameter("Address", typeof(string));

        var emailIdParameter = emailId != null ?
            new ObjectParameter("EmailId", emailId) :
            new ObjectParameter("EmailId", typeof(string));

        var phoneNumberParameter = phoneNumber != null ?
            new ObjectParameter("PhoneNumber", phoneNumber) :
            new ObjectParameter("PhoneNumber", typeof(string));

        var passwordParameter = password != null ?
            new ObjectParameter("Password", password) :
            new ObjectParameter("Password", typeof(string));

        var sequrityQuestionParameter = sequrityQuestion != null ?
            new ObjectParameter("SequrityQuestion", sequrityQuestion) :
            new ObjectParameter("SequrityQuestion", typeof(string));

        var answerParameter = answer != null ?
            new ObjectParameter("Answer", answer) :
            new ObjectParameter("Answer", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_login", firstNameParameter, lastNameParameter, addressParameter, emailIdParameter, phoneNumberParameter, passwordParameter, sequrityQuestionParameter, answerParameter);
    }

    public virtual int sp_LoginCheck(string email, string password, ObjectParameter name)
    {
        var emailParameter = email != null ?
            new ObjectParameter("email", email) :
            new ObjectParameter("email", typeof(string));

        var passwordParameter = password != null ?
            new ObjectParameter("password", password) :
            new ObjectParameter("password", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_LoginCheck", emailParameter, passwordParameter, name);
    }

    public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
    {
        var diagramnameParameter = diagramname != null ?
            new ObjectParameter("diagramname", diagramname) :
            new ObjectParameter("diagramname", typeof(string));

        var owner_idParameter = owner_id.HasValue ?
            new ObjectParameter("owner_id", owner_id) :
            new ObjectParameter("owner_id", typeof(int));

        var new_diagramnameParameter = new_diagramname != null ?
            new ObjectParameter("new_diagramname", new_diagramname) :
            new ObjectParameter("new_diagramname", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
    }

    public virtual int sp_upgraddiagrams()
    {
        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
    }

    public virtual int sp_userpwdchange(string current, string newpass, string email)
    {
        var currentParameter = current != null ?
            new ObjectParameter("current", current) :
            new ObjectParameter("current", typeof(string));

        var newpassParameter = newpass != null ?
            new ObjectParameter("newpass", newpass) :
            new ObjectParameter("newpass", typeof(string));

        var emailParameter = email != null ?
            new ObjectParameter("email", email) :
            new ObjectParameter("email", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_userpwdchange", currentParameter, newpassParameter, emailParameter);
    }
}
